version: '3.8'

services:
  stackapp-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: stackapp-api:latest
    container_name: stackapp-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - STACKAPP_HOST=0.0.0.0
      - STACKAPP_PORT=8000
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - ./logs:/app/logs
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # Uncomment if you need a database
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: stackapp-postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=stackapp
  #     - POSTGRES_PASSWORD=stackapp_password
  #     - POSTGRES_DB=stackapp
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"

  # Uncomment if you need caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: stackapp-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data

volumes:
  postgres-data:
  redis-data:
